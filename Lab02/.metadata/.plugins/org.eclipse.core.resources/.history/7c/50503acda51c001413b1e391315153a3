=============================================================================
List of generated methods in project: ProcessorExpert

THIS TEXT DESCRIPTION IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
=============================================================================

Module "AD1"       (component ADC_LDD)
   - AD1_Init -Initializes the device. Allocates memory for the device data structure, allocates interrupt vectors and sets 
                interrupt priority, sets pin routing, sets timing, etc.   If the "Enable in init. code" is set to "yes" value 
                then the device is also enabled(see the description of the Enable() method). In this case the Enable() method 
                is not necessary and needn't to be generated.    This method can be called only once. Before the second call of 
                Init() the Deinit() must be called first.
   - AD1_StartSingleMeasurement -This method starts one measurement of the selected group of samples and exits immediately. 
                This is ADC SW trigger method. The group of samples for measurement is specified by preceding call to 
                <SelectSampleGroup()> or <CreateSampleGroup> method.     DMA disabled: The <OnMeasurementComplete() > event is 
                invoked after the measurement is done and if the event is enabled. Results of the measurement can be read by 
                the <GetMeasuredValues()> method.     DMA enabled: DMA request from configured ADC is enabled automatically. 
                The <OnMeasurementComplete() > event is invoked after the requested number of results are transferred to 
                destination buffer by DMA and if the event is enabled. <GetMeasuredValues()> method is not available if DMA 
                mode is enabled. If the DMA transfer was completed before and DMA is not recofingured, DMA error can occur. See 
                also <SetBuffer()> method.     The state of the measurement can be also polled by the 
                <GetMeasurementCompleteStatus()> method. The <Discontinuous mode> doesn't support this method.
   - AD1_GetMeasuredValues -This method copies results of the last measurement to the user supplied buffer. Data size depends 
                on the size of measured sample group (see <SelectSampleGroup()> or <CreateSampleGroup()> method). Data 
                representation is defined by the <Result type> property. Typically this method is called from 
                <OnMeasurementComplete> event to get results of the last measurement. This method is not available if DMA is 
                enabled.
   - AD1_CreateSampleGroup -This method prepares HW for next measurement according to array of samples defined during run-time. 
                The array of samples should be prepared prior to calling this method. Pointer to the array is passed into this 
                method in parameter SampleGroupPtr. The number of samples is defined by parameter SampleCount. Once any group 
                is prepared, the measurement can be started multiple times. Note: This method works only with the sample groups 
                defined during run-time. For design-time defined groups use <SelectSampleGroup()> method.

Module "Bit1"      (component BitIO)
   - Bit1_GetVal -Returns the input/output value. If the direction is [input] then the input value of the pin is read and 
                returned. If the direction is [output] then the last written value is returned (see <Safe mode> property for 
                limitations). This method cannot be disabled if direction is [input].
   - Bit1_PutVal -The specified output value is set. If the direction is [input], the component saves the value to a memory or 
                a register and this value will be written to the pin after switching to the output mode (using [SetDir(TRUE)]; 
                see <Safe mode> property for limitations). If the direction is [output], it writes the value to the pin. 
                (Method is available only if the direction = _[output]_ or _[input/output]_).
   - Bit1_ClrVal -Clears (set to zero) the output value. It is equivalent to the [PutVal(FALSE)]. This method is available only 
                if the direction = _[output]_ or _[input/output]_.
   - Bit1_SetVal -Sets (to one) the output value. It is equivalent to the [PutVal(TRUE)]. This method is available only if the 
                direction = _[output]_ or _[input/output]_.

Module "Cpu"       (component MK20DX128EX5)

===================================================================================
